@model Uranus.Domain.Entities.Company

@{
    ViewBag.Title = "Create";
}

<div class="container">
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">@ViewBag.Title</h1>
            <ol class="breadcrumb">
                <li>@Html.ActionLink("Home", "Index", "Home")</li>
                <li class="active">Company</li>
            </ol>
        </div>

    </div><!-- /.row -->
    <div class="row">
        <div class="col-sm-12">
            @Html.AntiForgeryToken()
            @if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
            {
                <div class="alert alert-danger">
                    <a href="#" class="close" data-dismiss="alert">×</a>
                    <h4>Validation Errors</h4>
                    @Html.ValidationSummary()
                </div>
            }
            @using (Html.BeginForm("Create", "Company", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="row">
                    <div class="form-group col-lg-4">
                        @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.CompanyName)
                        @Html.ValidationMessageFor(model => model.CompanyName)

                    </div>

                    <div class="form-group col-lg-4">
                        @Html.LabelFor(model => model.CompanyType, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.CompanyType)
                        @Html.ValidationMessageFor(model => model.CompanyType)

                    </div>

                    <div class="form-group col-lg-4">
                        @Html.LabelFor(model => model.CompanyAddress, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.CompanyAddress)
                        @Html.ValidationMessageFor(model => model.CompanyAddress)

                    </div>

                    <div class="form-group col-lg-4">
                        @Html.LabelFor(model => model.EmaildId, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.EmaildId)
                        @Html.ValidationMessageFor(model => model.EmaildId)

                    </div>

                    <div class="form-group col-lg-4">
                        @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.ContactNo)
                        @Html.ValidationMessageFor(model => model.ContactNo)
                    </div>


                    <div class="form-group col-lg-4">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.Address)
                        @Html.ValidationMessageFor(model => model.Address)

                    </div>

                    <div class="form-group col-lg-4">
                        @Html.LabelFor(model => model.BusinessHours, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.BusinessHours)
                        @Html.ValidationMessageFor(model => model.BusinessHours)

                    </div>

                    <div class="form-group col-lg-4">
                        @Html.LabelFor(model => model.FacebookLink, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.FacebookLink)
                        @Html.ValidationMessageFor(model => model.FacebookLink)

                    </div>

                    <div class="form-group col-lg-4">
                        @Html.LabelFor(model => model.LinkedInLink, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.LinkedInLink)
                        @Html.ValidationMessageFor(model => model.LinkedInLink)

                    </div>

                    <div class="form-group col-lg-4">
                        @Html.LabelFor(model => model.TwitterLink, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.TwitterLink)
                        @Html.ValidationMessageFor(model => model.TwitterLink)

                    </div>

                    <div class="form-group col-lg-4">
                        @Html.LabelFor(model => model.WebsiteLink, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.WebsiteLink)
                        @Html.ValidationMessageFor(model => model.WebsiteLink)

                    </div>

                    <div class="form-group col-lg-4">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.Description)
                        @Html.ValidationMessageFor(model => model.Description)

                    </div>

                    <div class="form-group col-lg-4">
                        @Html.LabelFor(model => model.ImageLogo, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.ImageLogo)
                        @Html.ValidationMessageFor(model => model.ImageLogo)

                    </div>

                    <div class="clearfix"></div>
                    <div class="form-group col-lg-4"></div>
                    <div class="form-group col-lg-4">
                        <button class="btn btn-primary" type="submit" id="save">Submit</button>
                        &nbsp;&nbsp;
                        @Html.ActionLink("Back to List", "Index")
                    </div>
                </div>
            }
        </div>
    </div>
